apply from: 'dependencies.gradle'

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    //android plugins version
    ext {
        kotlin_version = "1.7.21"
        gradle_version = '7.3.1'
        hilt_version = '2.44.2'
        nav_version = '2.5.3'
        firebase_version = '4.3.10'
        crashlytics_version = '2.9.4'
        one_signal_version = '0.14.0'
        maps_version = '2.0.0'
        gradle_doctor_version = '0.8.1'
    }

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
        classpath "com.google.gms:google-services:$firebase_version"
        classpath "com.google.firebase:firebase-crashlytics-gradle:$crashlytics_version"
        classpath "gradle.plugin.com.onesignal:onesignal-gradle-plugin:$one_signal_version"
        classpath "com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin:$maps_version"
        classpath "com.osacky.doctor:doctor-plugin:$gradle_doctor_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply plugin: "com.osacky.doctor"

Properties props = new Properties()
props.load(new FileInputStream(file('modules.properties')))
def androidModules = props.getProperty('androidModules').split(",")

subprojects {
    if (androidModules.contains(it.name)) {
        if (it.name == 'app') {
            apply plugin: 'com.android.application'
        } else {
            apply plugin: 'com.android.library'
        }
        apply plugin: 'kotlin-android'
        apply plugin: 'kotlin-parcelize'
        apply from: '../app-flavors.gradle'

        android {
            compileSdkVersion rootProject.ext.androidCompileSdkVersion

            lintOptions {
                disable 'NullSafeMutableLiveData'
            }

            defaultConfig {
                minSdkVersion rootProject.ext.androidMinSdkVersion
                targetSdkVersion rootProject.ext.androidTargetSdkVersion
                versionCode 1
                versionName "1.0"

                testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

                buildFeatures {
                    viewBinding true
                }

                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_11
                    targetCompatibility JavaVersion.VERSION_11
                }
                kotlinOptions {
                    jvmTarget = '11'
                }
                packagingOptions {
                    exclude 'META-INF/LICENSE'
                    exclude 'META-INF/NOTICE'
                    exclude 'META-INF/LICENSE.txt'
                    exclude 'META-INF/NOTICE.txt'
                    exclude 'META-INF/gradle/incremental.annotation.processors'
                    exclude 'META-INF/metadata.kotlin_module'
                    exclude 'META-INF/metadata.jvm.kotlin_module'
                }
            }

            buildFeatures {
                viewBinding true
            }
        }
    } else {
        apply plugin: 'java-library'
        apply plugin: 'kotlin'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
